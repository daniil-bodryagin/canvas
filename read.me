"Что за адский говнокод?"
Сейчас я попробую объяснить. Я - программист-самоучка. Это моё хобби, как у некоторых вязание крючком или резьба по дереву. Мой код - ни в коем случае не образец для изучения. Не повторяйте это дома! И на работе тоже!
Наоборот, я готов впитывать советы и конструктивную критику, потому что мне интересно узнавать что-то новое. Тем не менее, некоторые вещи о своём коде я уже знаю, поэтому я их сейчас перечислю, чтобы было понятно, что это не баг, а фича.
Да, я знаю, что у меня абсолютный хаос, использование глобальных переменных, грязные функции, зоопарк разнообразных антипаттернов и монолитная архитектура. Я знаю обо многих вещах, которые не нужно делать, но преблемка в том, что я не знаю, как нужно. Пока ещё не научился, поэтому да, этот код будет переписываться, возможно даже с нуля, возможно, не один раз. Это и есть мой процесс обучения, выставленный напоказ.
Да, я знаю, что вместо того, чтобы писать говнокод, неплохо было бы почитать умных книжек и сразу начать писать правильно. Но в моём случае так не сработало - я прочитал много книжек, но так ничего и не написал, потому что без практики ты даже не можешь уловить, о каких ситуациях идёт речь, просто потому, что у тебя нет опыта. Поэтому для начала нужно написать говнокода достаточно, чтобы потом наконец перестать его писать. Это - мой неизбежный начальный говнокод. Более того, я уверен, многие не могут нормально научиться программированию именно потому, что, как и я, с самого старта долго пытались обдумать, что они будут писать, чтобы код был хотя бы менее говнистый. А на деле нужно было просто пройти через этот этап, было бы и быстрее, и легче. Ведь только столкнувшись с проблемами говнокода на своём собственном примере, можно наконец понять, ради чего существуют правила хорошего кода, какие задачи решают и от чего уберегают.
Да, я понимаю, что мой код крайне низкоуровневый, и что так серьёзные программы вообще не пишут. Лучший код - это код, который не был написан. Да, лучше всего использовать библиотеки. А ещё лучше - фреймворк. А ещё лучше - готовый игровой движок. Я понимаю, что я не напишу лучше и оптимизированней, чем профессионалы своего дела. Да, я понимаю, что мой код будет полон велосипедов, и что изготовление заново уже готовых вещей будет только затягивать разработку, что абсолютно нецелесообразно. Но это хобби. Вы когда играете в мяч, вы стремитесь побыстрее доиграть? Я испытываю непреодолимую симпатию к низкоуровневым инструментам - легкий, быстрый код и ничего лишнего. Возможно, если бы я владел мастерством, я стал бы членом демо-сцены, но я всего-лишь новичок-любитель.
Кстати говоря, программистам никогда не бывает достаточно, они всегда стремятся поднять уровень абстракции инструментов ещё выше. А ведь я УЖЕ использую довольно высокий уровень абстрагирования - браузер. Чудовищно сложная штука, по сути виртуальная машина, которая предоставляет колоссальное количество средств для управления графикой, проигрывания звуков, создания интерфейсов! Я сознательно остановился на этом уровне, и здесь планирую играть с самописным кодом. Я понимаю, что для того, чтобы код был лучше, нужно как минимум просто не писать его ТАК. Поэтому нет смысла повторять это мне снова - эта рекомендация не повысит качество того, что я делаю, потому что я не собираюсь её выполнять.
Но если у вас есть совет, как сделать лучше мой код не перенося его на другой уровень - я буду слушать очень внимательно, потому что мне действительно интересно, и я буду чрезвычайно благодарен!
